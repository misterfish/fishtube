#!/usr/bin/perl

BEGIN {
    use File::Basename;
    my $d = dirname $0;
    if (-l $0) {
        my $l = dirname readlink $0;
        $bin_dir = $l;
        $bin_dir = "$d/$bin_dir" unless $l =~ m|^/|;
    }
    else {
        $bin_dir = $d;
    }
    push @INC, $bin_dir;
    push @INC, "$bin_dir/../../..";
}

use 5.10.0;

use strict;
use warnings;

use Fish::Youtube::Utility;

sub error;
sub war;

$| = 1;

my $USAGE = "Usage: $0 [-v] [-q quiet] [-t tmpdir] [-f to force] [-o output-file] [-d dir, ignored if -o is abs] [-s small/medium/large/hd720/hd1080] [-T if not terminal] youtube-url ";

our $opt_T;
our $opt_d;
our $opt_o;
our $opt_f;
our $opt_s;
our $opt_t;
our $opt_q;

getopts('s:fo:kvt:qd:T');

disable_colors() if $opt_T;

my $url = shift or error "$USAGE";
$Fish::Youtube::Utility::LOG_LEVEL = 1;

use Fish::Youtube::Get;

my $get = Fish::Youtube::Get->new(
    dir => $opt_d,
    out_file => $opt_o,
    force => $opt_f,
    quiet => $opt_q,
    tmp => $opt_t,
    url => $url,
);

my $avail = $get->avail;

for my $qual (keys %$avail) {
    D 'qual', $qual;
    my $d = $avail{$qual};
    for my $type (keys %$d) {
        D 'type', $type;
        my $url = $d->{$type};
        D 'url', $url;
    }
}

#$opt_s

exit;

sub error {
    my @s = @_;
    die join ' ', @s, "\n";
}

sub war {
    my @s = @_;
    warn join ' ', @s, "\n";
}


